(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{358:function(e,t,n){"use strict";n.r(t);var a=n(43),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"dynamic-config-spring-boot-springcloud-动态配置变化监控-获取变化-支持config、nacos"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-config-spring-boot-springcloud-动态配置变化监控-获取变化-支持config、nacos"}},[e._v("#")]),e._v(" dynamic-config-spring-boot SpringCloud-动态配置变化监控-获取变化(支持Config、Nacos)")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://search.maven.org/search?q=g:com.purgeteam%20AND%20a:dynamic-config-spring-boot-starter",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://img.shields.io/maven-central/v/com.purgeteam/dynamic-config-spring-boot-starter.svg?label=Maven%20Central",alt:"Maven Central"}}),n("OutboundLink")],1),e._v(" "),n("img",{attrs:{src:"https://img.shields.io/badge/SpringBoot-2.1.8RELEASE-green.svg",alt:"License"}}),e._v(" "),n("img",{attrs:{src:"https://img.shields.io/badge/JAVA-1.8+-green.svg",alt:"License"}}),e._v(" "),n("img",{attrs:{src:"https://img.shields.io/badge/maven-3.0+-green.svg",alt:"License"}}),e._v(" "),n("a",{attrs:{href:"https://www.apache.org/licenses/LICENSE-2.0.html",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://img.shields.io/badge/license-Apache%202-4EB1BA.svg",alt:"License"}}),n("OutboundLink")],1)]),e._v(" "),n("blockquote",[n("p",[e._v("qq交流群: "),n("code",[e._v("812321371")]),e._v("\n微信交流群: "),n("code",[e._v("MercyYao")])])]),e._v(" "),n("h2",{attrs:{id:"简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[e._v("#")]),e._v(" 简介")]),e._v(" "),n("p",[e._v("配置中心有原生的 "),n("code",[e._v("SpringCloud Config")]),e._v(" 、国内开源的 阿里 "),n("code",[e._v("Nacos")]),e._v("、携程 "),n("code",[e._v("Apollo")]),e._v(" 等。\n都是配置热加载的基础上增加了其他的功能。")]),e._v(" "),n("p",[e._v("配置中心具有配置热加载，修改配置 -> 推送到程序 -> 执行配置更新。")]),e._v(" "),n("p",[e._v("而获取配置更新的具体内容，这些组件都没有做到("),n("code",[e._v("SpringCloud Config")]),e._v("、"),n("code",[e._v("Nacos")]),e._v(", "),n("code",[e._v("Apollo待验证")]),e._v(" )。如:获取变化的配置 "),n("code",[e._v("test")]),e._v(" 更新前为 "),n("code",[e._v("123")]),e._v(" ,更新后为 "),n("code",[e._v("111")]),e._v("。")]),e._v(" "),n("p",[n("code",[e._v("SpringCloud Config")]),e._v(" 、"),n("code",[e._v("Nacos")]),e._v(" 、 "),n("code",[e._v("Apollo待验证")]),e._v(" 配置更新都是将整个配置文件推送给服务进行配置对比结果进行更新。这个阶段用户无法从程序中获取更新的内容。")]),e._v(" "),n("p",[e._v("为了实现这个扩展功能点,更新结果可以让程序感知。\n在这个阶段用户通过code可以实现配置监听, 监听到某个配置变化做其他操作等。")]),e._v(" "),n("p",[e._v("示例: 获取到推送配置变化, 感知到 "),n("code",[e._v("test")]),e._v(" 发生变化, 做更新同步数据操作等等。")]),e._v(" "),n("p",[n("strong",[e._v("感知结果集如:")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("{\n    `被更新的配置key`:{\n        before: `原来的值`，\n        after: `更新后的值`\n    },\n    `被更新的配置key`:{\n        before: `原来的值`，\n        after: `更新后的值`\n    }\n}\n")])])]),n("h2",{attrs:{id:"功能使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#功能使用"}},[e._v("#")]),e._v(" 功能使用")]),e._v(" "),n("h3",{attrs:{id:"添加依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加依赖"}},[e._v("#")]),e._v(" 添加依赖")]),e._v(" "),n("p",[n("strong",[e._v("ps:")]),e._v(" 实际version版本请使用最新版\n"),n("strong",[e._v("最新版本:")]),e._v(" "),n("a",{attrs:{href:"https://search.maven.org/search?q=g:com.purgeteam%20AND%20a:dynamic-config-spring-boot-starter",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://img.shields.io/maven-central/v/com.purgeteam/dynamic-config-spring-boot-starter.svg?label=Maven%20Central",alt:"Maven Central"}}),n("OutboundLink")],1)]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("<dependency>\n  <groupId>com.purgeteam</groupId>\n  <artifactId>dynamic-config-spring-boot-starter</artifactId>\n  <version>0.1.0.RELEASE</version>\n</dependency>\n")])])]),n("p",[e._v("当然实际情况要结合添加动态配置依赖包 "),n("code",[e._v("SpringCloud Config")]),e._v(" 、 "),n("code",[e._v("Nacos")]),e._v(" 、 "),n("code",[e._v("Apollo")]),e._v(" 。")]),e._v(" "),n("p",[n("code",[e._v("dynamic-config-spring-boot-starter")]),e._v(" 模块不包含以上依赖, 需要自行添加。")]),e._v(" "),n("h3",{attrs:{id:"enabledynamicconfigevent"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#enabledynamicconfigevent"}},[e._v("#")]),e._v(" @EnableDynamicConfigEvent")]),e._v(" "),n("p",[n("strong",[e._v("简介:")]),e._v(" 开启这个特性注解，具备配置推送更新监听能力。")]),e._v(" "),n("p",[e._v("启动类添加 "),n("code",[e._v("@EnableDynamicConfigEvent")]),e._v(" 注解开启配置变化监听功能。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("@EnableDynamicConfigEvent\n@SpringBootApplication\npublic class DynamicConfigSpringBootApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(DynamicConfigSpringBootApplication.class, args);\n  }\n\n}\n")])])]),n("h3",{attrs:{id:"编写事件接收器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编写事件接收器"}},[e._v("#")]),e._v(" 编写事件接收器")]),e._v(" "),n("p",[e._v("创建 "),n("code",[e._v("NacosListener")]),e._v("(名称随意)  实现 "),n("code",[e._v("ApplicationListener<ActionConfigEvent>#onApplicationEvent")]),e._v(" 方法")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('@Slf4j\n@Component\npublic class NacosListener implements ApplicationListener<ActionConfigEvent> {\n\n  @Override\n  public void onApplicationEvent(ActionConfigEvent event) {\n    log.info("接收事件");\n    log.info(event.getPropertyMap().toString());\n  }\n}\n')])])]),n("p",[e._v("在 "),n("code",[e._v("NacosListener#onApplicationEvent")]),e._v(" 方法里获取目标值, 作相应的逻辑处理。")]),e._v(" "),n("p",[n("strong",[e._v("ActionConfigEvent event:")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("public class ActionConfigEvent extends ApplicationEvent {\n\n    // 事件说明\n    private String eventDesc;\n    \n    // 更新变化结果集\n    private Map<String, HashMap> propertyMap;\n    ...\n}\n")])])]),n("p",[n("code",[e._v("ActionConfigEvent")]),e._v(" 主要包含 "),n("code",[e._v("Map<String, HashMap> propertyMap;")]),e._v(", 从这里可以获取更新变化结果, propertyMap结构如下:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("{\n    `被更新的配置key`:{\n        before: `原来的值`，\n        after: `更新后的值`\n    },\n    `被更新的配置key`:{\n        before: `原来的值`，\n        after: `更新后的值`\n    }\n}\n")])])]),n("h3",{attrs:{id:"更新配置演示"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更新配置演示"}},[e._v("#")]),e._v(" 更新配置演示")]),e._v(" "),n("p",[n("strong",[e._v("ps:")]),e._v(" 示例为 "),n("code",[e._v("Nacos")]),e._v(" 其它配置中心无差别。")]),e._v(" "),n("p",[e._v("原始配置:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("test.age=18\nuser.name=purgeyao\n")])])]),n("p",[e._v("修改配置:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("# test.age 将18更新为19\ntest.age=19\nuser.name=purgeyao\n")])])]),n("p",[e._v("在 "),n("code",[e._v("NacosListener#onApplicationEvent")]),e._v(" 方法加入端点调试观察 "),n("code",[e._v("ActionConfigEvent")]),e._v(" 对象参数。")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/purgeyao/purgeyao.github.io/master/img/blog/2019-10-17/config1.png",alt:"img"}})]),e._v(" "),n("p",[e._v("更新的 "),n("code",[e._v("test.age")]),e._v(" 已经被记录在了 "),n("code",[e._v("ActionConfigEvent.propertyMap")]),e._v(" 里了, 从 18 更新为 19。")]),e._v(" "),n("p",[e._v("控制台打印:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("2019-10-17 10:44:09.221  INFO 54054 --- [-10.1.1.97_8848] c.p.dynamic.config.demo.NacosListener    : 接收事件\n2019-10-17 10:45:19.752  INFO 54054 --- [-10.1.1.97_8848] c.p.dynamic.config.demo.NacosListener    : {test.age={before=18, after=19}}\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);